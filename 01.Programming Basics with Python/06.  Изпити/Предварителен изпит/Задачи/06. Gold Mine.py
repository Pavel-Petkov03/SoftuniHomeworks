# Група ентусиасти обикалят по различни локации, където има златни мини. Вашата задача е да им помогнете като напишете програма, която да приема броя на локациите и очакван среден добив на злато за ден за една локация. За всеки ден ще получавате колко злато са добили на локацията. Проверете дали са постигнали очаквания добив за дадена локация или не.
# Вход:
# Първоначално от конзолата се прочита едно число – брой локации – цяло число в интервала [1.. 100]
# За всяка една локация се четат две числа, по едно на ред:
# 1.	На първия ред – очакван среден добив на ден злато – реално число в интервала [0.00.. 10000.00]
# 2.	На втория ред – брой дни, в който ще се копае на дадената локация – цяло число в интервала [1.. 30]
# За всеки ден се чете по едно число:
# •	Добито злато за деня – реално число в интервала [0.00.. 1000.00]
# Изход:
# След приключване на копаенето на дадена локация се печата един ред според случая:
# •	Ако средният добив злато за ден достига или надвишава очаквания среден добив на ден злато:
# o	"Good job! Average gold per day: {среден добив на ден за дадената локация}."
# •	Ако средният добив злато за ден е под очаквания среден добив на ден злато:
# o	"You need {злато, което не е достигнало за достигане на очакваният среден добив} gold."
# Резултатът да бъде форматиран до вторият знак след десетичният разделител.
locations = int(input())
all_extraction_for_day = 0
for c in range(1 , locations + 1):
    average = 0
    all_extraction_for_day = 0
    expected_extraction = float(input())
    days_for_location = int(input())
    for d in range(1 , days_for_location + 1):
        extraction_for_day = int(input())
        all_extraction_for_day += extraction_for_day
        average = all_extraction_for_day / days_for_location
    if average >= expected_extraction:
        print(f"Good job! Average gold per day: {average:.2f}.")
    else:
        print(f"You need {(expected_extraction - average):.2f} gold.")

